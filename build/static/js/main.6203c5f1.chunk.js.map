{"version":3,"sources":["Components/Home.js","Models/Recipe.js","Pages/NewRecipeContainer.js","Components/Recipe.js","Pages/RecipesContainer.js","Components/RecipesList.js","Pages/RecipesListContainer.js","Config/Routes.js","Components/Navbar.js","App.js","index.js"],"names":["Home","Container","className","Row","Col","xs","Button","href","url","RecipeModel","getAllRecipes","fetch","then","response","json","getRecipeById","recipeID","createRecipe","recipe","method","headers","localStorage","getItem","body","JSON","stringify","NewRecipeContainer","state","name","subtitle","picture","handleChange","event","target","value","setState","handleSubmit","preventDefault","result","console","log","props","history","push","onSubmit","this","htmlFor","onInput","type","Component","Recipe","list","CSSTransition","timeout","classNames","Card","CardTitle","CardImg","top","width","src","alt","CardBody","CardText","to","RecipeContainer","match","params","id","catch","err","RecipesList","recipesList","recipes","map","recipeObj","ListGroup","TransitionGroup","RecipesListContainer","exact","path","component","AppNavbar","isOpen","toggle","Navbar","color","light","NavbarBrand","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","App","Routes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6203c5f1.chunk.js","sourcesContent":["import React from 'react';\nimport { Container, Col, Button, Row } from 'reactstrap';\n\nfunction Home () {\n  return(\n    <Container className=\"hero\">\n      <Row>\n        <Col xs=\"6\">\n          <h1>\n            Create and Save your favorite recipes.\n          </h1>\n          <p>\n            Find and share everyday cooking inspiration on Flavor. Discover and add recipes based on the food you love.\n          </p>\n          <Button className=\"btn-primary\">\n            <a href=\"/recipes\">\n              View Recipes\n            </a>\n          </Button>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default Home;","const url = `https://flavor-backend.herokuapp.com/api/v1/recipes`\n\nclass RecipeModel {\n  static getAllRecipes = () => {\n    return fetch(url)\n      .then((response) => response.json())\n  }\n  \n  static getRecipeById = (recipeID) => {\n    return fetch(`${url}/${recipeID}`)\n      .then((response) => response.json())\n  }\n\n  static createRecipe = (recipe) => {\n    return fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'authorization': localStorage.getItem('token'),\n      },\n      body: JSON.stringify(recipe)\n    })\n      .then((response) => response.json())\n  }\n}\n\nexport default RecipeModel;","import React, { Component } from 'react';\nimport RecipeModel from '../Models/Recipe';\n\nclass NewRecipeContainer extends Component {\n  state= {\n    name: \"\",\n    subtitle: \"\",\n    picture: \"\",\n  }\n\n  handleChange = (event) => {\n    if(event.target.value === 'on') {\n      event.target.value = true;\n    }\n\n    this.setState({[event.target.name]: event.target.value})\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    RecipeModel.createRecipe(this.state)\n      .then((result) => {\n        console.log(result);\n      });\n    this.props.history.push('/recipes');\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <h2>Add A New Recipe</h2>\n          <div>\n            <label htmlFor=\"\">Title</label>\n            <input onInput={this.handleChange} type=\"text\" name=\"title\" />\n            <label htmlFor=\"\">Subtitle</label>\n            <input onInput={this.handleChange} type=\"text\" name=\"subtitle\" />\n            <label htmlFor=\"\">Picture</label>\n            <input onInput={this.handleChange} type=\"text\" name=\"picture\" />\n          </div>\n          <button type=\"submit\">Add Recipe</button>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default NewRecipeContainer;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Col, Button, Card, CardTitle, CardImg, CardBody, CardText } from 'reactstrap';\nimport { CSSTransition } from 'react-transition-group';\n\nfunction Recipe (props) {\n  const { recipe, list } = props;\n  return(\n    <CSSTransition timeout={500} classNames=\"fade\">\n      <Col>\n        <Card>\n          <CardTitle>{recipe.name}</CardTitle>\n          <CardImg top width=\"10%\" src={recipe.picture} alt=\"Food image cap\" />\n          <CardBody>\n            <CardText>\n              {recipe.subtitle}\n            </CardText>\n            <Button className=\"btn-primary\">\n              <Link to=\"/recipe\">View Recipe</Link>\n            </Button>\n          </CardBody>\n        </Card>\n      </Col>\n  </CSSTransition>\n  )\n}\n\nexport default Recipe;","import React, { Component } from 'react';\nimport Recipe from '../Components/Recipe';\nimport RecipeModel from '../Models/Recipe';\n\nclass RecipeContainer extends Component {\n  state = {\n    recipe: {},\n  };\n\n  componentDidMount() {\n    RecipeModel.getRecipeById(this.props.match.params.id)\n      .then((result) => {\n        console.log(result)\n        this.setState({recipe: result})\n      })\n      .catch((err) => console.log(err))\n  }\n\n  render() {\n    console.log(this.props);\n    return (\n      <Recipe recipe={this.state.recipe}\n      list={false} />\n    );\n  }\n}\n\nexport default RecipeContainer;","import React from 'react';\nimport { Container, ListGroup, Row} from 'reactstrap';\nimport { TransitionGroup } from 'react-transition-group';\nimport Recipe from './Recipe';\n\n\nfunction RecipesList(props) {\n  console.log(props)\n  const recipesList = props.recipes.map((recipeObj) => {\n    console.log(recipeObj)\n    return (\n      <Recipe recipe={recipeObj} list={true} />\n    )\n  })\n    return(\n      <Container>\n        <div>\n          <h3>New Recipes</h3>\n          <ListGroup>\n            <TransitionGroup className=\"recipes-list\">\n              <Row>\n                {recipesList}\n              </Row>\n            </TransitionGroup>\n          </ListGroup>\n        </div>\n      </Container>\n    )\n  }\n\nexport default RecipesList;","import React , { Component} from 'react';\nimport RecipesList from '../Components/RecipesList';\nimport RecipeModel from '../Models/Recipe';\n\nclass RecipesListContainer extends Component {\n  state = {\n    recipes: [],\n  };\n\n  componentDidMount() {\n    RecipeModel.getAllRecipes()\n      .then((result) => {\n        console.log(result)\n        this.setState({recipes: result});\n      })\n      .catch((err) => console.log(err))\n  }\n\n  render() {\n    return (\n      <RecipesList recipes={this.state.recipes} />\n    )\n  }\n}\n\nexport default RecipesListContainer;","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Home from '../Components/Home';\nimport NewRecipeContainer from '../Pages/NewRecipeContainer';\nimport RecipeContainer from '../Pages/RecipesContainer';\nimport RecipesListContainer from '../Pages/RecipesListContainer';\n\nexport default (\n  <Switch>\n    <Route exact path='/' component={ Home } />\n    <Route exact path='/recipes' component={ RecipesListContainer } />\n    <Route path='/recipes/new' component={ NewRecipeContainer } />\n    <Route exact path='/recipes/:id' component={ RecipeContainer } />\n  </Switch>\n)","import React, { Component } from 'react';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  Container\n} from 'reactstrap';\n\nclass AppNavbar extends Component {\n  state ={\n    isOpen:false\n  }\n\n  toggle = () => {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n  \n  render(){\n    return(\n      <div>\n        <Navbar color=\"faded\" light>\n          <Container>\n            <NavbarBrand href=\"/\"><img className=\"logo\" src=\"https://lh3.google.com/u/0/d/1mpil7xzTYG52LrtVgvuGn7bwrfrlTgXu=w1440-h821-iv1\" alt=\"brandlogo\"/>\n            </NavbarBrand>\n            <NavbarToggler onClick={this.toggle} />\n            <Collapse isOpen={this.state.isOpen} navbar>\n              <Nav className=\"ml-auto\" navbar>\n              <NavItem>\n                <NavLink href=\"/recipes\">Recipes</NavLink>\n              </NavItem>\n              </Nav>\n            </Collapse>\n          </Container>\n        </Navbar>\n      </div>\n    )\n  }\n}\n\nexport default AppNavbar;","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Routes from './Config/Routes';\nimport AppNavbar from './Components/Navbar';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <AppNavbar />\n        { Routes }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <Router>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}